<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.lunarstra.quantum</groupId>
        <artifactId>quantum-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>quantum-gateway</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <properties>
        <maven.compiler.source>25</maven.compiler.source>
        <maven.compiler.target>25</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway-server-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-gateway-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-loadbalancer</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-reactor-spring-boot3-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>com.lunarstra.quantum</groupId>
            <artifactId>quantum-common-satoken</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>cn.dev33</groupId>
                    <artifactId>sa-token-spring-boot3-starter</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.lunarstra.quantum</groupId>
            <artifactId>quantum-common-dubbo</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.lunarstra.quantum</groupId>
            <artifactId>quantum-common-core</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <configuration>
                    <!-- imageName用于设置生成的二进制文件名称 -->
                    <imageName>${project.artifactId}</imageName>
                    <!-- mainClass用于指定main方法类路径 -->
                    <mainClass>com.lunarstra.quantum.QuantumGateway5000</mainClass>
                    <buildArgs>
                        <buildArg>--no-fallback</buildArg>
                        <buildArg>--install-exit-handlers</buildArg>
                        <buildArg>--enable-url-protocols=http,https</buildArg>
                        <buildArg>--enable-monitoring=heapdump</buildArg>
                        <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                        <buildArg>-H:+UnlockExperimentalVMOptions</buildArg>
                        <buildArg>--initialize-at-build-time=com.alibaba.fastjson2</buildArg>
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=org.springframework.boot.loader.nio.file.NestedFileSystemProvider</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=org.apache.dubbo.common.logger.LoggerFactory</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-run-time=org.springframework</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=org.apache.dubbo.common.logger.Level</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.JSONFactory$CacheItem</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.reader.ObjectReaderImplString</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.reader.ObjectReaderBaseModule</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.JSONReader$Context</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.util.TypeUtils$Cache</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.reader.ObjectReaderProvider$LRUAutoTypeCache</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.writer.ObjectWriterBaseModule</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.writer.ObjectWriterBaseModule$WriterAnnotationProcessor</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToDouble</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToShort</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToInteger</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToBigInteger</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToBigDecimal</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToBoolean</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToByte</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToDouble</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToFloat</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToLong</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToNumber</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.ToString</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.util.ParameterizedTypeImpl</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.reader.ObjectReaderBaseModule$ReaderAnnotationProcessor</buildArg>-->
<!--                        <buildArg>&#45;&#45;initialize-at-build-time=com.alibaba.fastjson2.function.impl.StringToAny</buildArg>-->
                    </buildArgs>

                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-maven-plugin</artifactId>
                <version>${dubbo.version}</version>
                <configuration>
                    <mainClass>com.lunarstra.quantum.QuantumGateway5000</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>dubbo-process-aot</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <release>25</release>
                            <fork>true</fork>
                            <verbose>true</verbose>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>process-aot</id>
                                <goals>
                                    <goal>process-aot</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <configuration>
                            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                            <metadataRepository>
                                <enabled>true</enabled>
                            </metadataRepository>
                            <requiredVersion>22.3</requiredVersion>
                            <!-- imageName用于设置生成的二进制文件名称 -->
                            <imageName>${project.artifactId}</imageName>
                            <!-- mainClass用于指定main方法类路径 -->
                            <mainClass>com.lunarstra.quantum.QuantumGateway5000</mainClass>
                            <buildArgs>
                                <buildArg>--initialize-at-build-time=com.alibaba.fastjson2</buildArg>
                            </buildArgs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>add-reachability-metadata</id>
                                <goals>
                                    <goal>add-reachability-metadata</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.dubbo</groupId>
                        <artifactId>dubbo-maven-plugin</artifactId>
                        <version>${dubbo.version}</version>
                        <configuration>
                            <mainClass>com.lunarstra.quantum.QuantumGateway5000</mainClass>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>dubbo-process-aot</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>